name: Continuous integration

on:
  push:
    branches:
    - main
    paths-ignore:
    - '**.md'
    - 'CITATION.cff'
    - 'LICENSE'
    - '.gitignore'
    - 'docs/**'
  pull_request:
    branches:
    - main
    paths-ignore:
    - '**.md'
    - 'CITATION.cff'
    - 'LICENSE'
    - '.gitignore'
    - 'docs/**'
  workflow_dispatch:
    inputs:
      manual_reference_commit:
        required: false
        type: string
      manual_testing_commit:
        required: false
        type: string

env:
  REFERENCE_GIT_COMMIT: 9d31b2ec4df6d8228f370ff20c8267ec6ba39383 # v2.7.0 + pretrained_hf param

jobs:
  Tests:
    strategy:
      matrix:
        os: [ ubuntu-latest ] #, macos-latest ]
        python: [ 3.8 ]
        job_num: [ 4 ]
        job: [ 1, 2, 3, 4 ]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Set up Python ${{ matrix.python }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python }}
    - name: Venv cache
      id: venv-cache
      uses: actions/cache@v3
      with:
        path: .env
        key: venv-${{ matrix.os }}-${{ matrix.python }}-${{ hashFiles('requirements*') }}
    - name: Pytest durations cache
      uses: actions/cache@v3
      with:
        path: .test_durations
        key: test_durations-${{ matrix.os }}-${{ matrix.python }}-${{ matrix.job }}-${{ github.run_id }}
        restore-keys: test_durations-0-
    - name: Setup
      if: steps.venv-cache.outputs.cache-hit != 'true'
      run: |
        python3 -m venv .env
        source .env/bin/activate
        make install
        make install-test
        make install-training
    - name: Prepare test data
      run: |
        source .env/bin/activate
        cp tests/util_test.py tests/util_test_ref.py # TODO: remove line once new util_test is in a release
        CURRENT_GIT_REF=`git rev-parse HEAD`
        if [ -n "${{ inputs.manual_target_commit }}" ]; then
          CURRENT_GIT_REF=${{ inputs.manual_target_commit }}
        fi
        if [ -n "${{ inputs.manual_testing_commit }}" ]; then
          REFERENCE_GIT_COMMIT=${{ inputs.manual_testing_commit }}
        fi
        git checkout $REFERENCE_GIT_COMMIT
        mkdir -p tests/data
        rm -rf tests/data/*
        python -m pytest \
          --quiet --co \
          --splitting-algorithm least_duration \
          --splits ${{ matrix.job_num }} \
          --group ${{ matrix.job }} \
          tests \
          | head -n -2 | grep -Po 'test_inference_with_data\[\K[^]]*(?=])' \
          > tests/data/models_gh_runner.txt
        python tests/util_test_ref.py --model_file $PWD/tests/data/models_gh_runner.txt
        mkdir -p tests/data_ref
        cp -r tests/data/* tests/data_ref
        git reset --hard $CURRENT_GIT_REF
        rm -rf tests/data/*
        cp -r tests/data_ref/* tests/data
    - name: Unit tests
      run: |
        source .env/bin/activate
        cp .test_durations durations_1
        cp .test_durations durations_2
        rm .test_durations
        python -m pytest \
          -x -v \
          --splitting-algorithm least_duration \
          --splits ${{ matrix.job_num }} \
          --group ${{ matrix.job }} \
          --store-durations \
          --durations-path durations_1 \
          --clean-durations \
          -k "not inference_with_data" \
          tests
        IS_GH_RUNNER=1 python -m pytest \
          -x -v \
          --store-durations \
          --durations-path durations_2 \
          --clean-durations \
          -k "inference_with_data" \
          tests
        jq -s -S 'add' durations_* > .test_durations
    - name: Collect pytest durations
      uses: actions/upload-artifact@v3
      with:
        name: pytest_durations_${{ matrix.os }}-${{ matrix.python }}-${{ matrix.job }}
        path: .test_durations

  Collect:
    needs: Tests
    runs-on: ubuntu-latest
    steps:
    - name: Cache
      uses: actions/cache@v3
      with:
        path: .test_durations
        key: test_durations-0-${{ github.run_id }}
    - name: Collect
      uses: actions/download-artifact@v3
      with:
        path: artifacts
    - name: Consolidate
      run: |
        jq -n -S \
          'reduce (inputs | to_entries[]) as {$key, $value} ({}; .[$key] += $value)' \
          artifacts/pytest_durations_*/.test_durations > .test_durations
    - uses: actions/upload-artifact@v3
      with:
        name: pytest_durations
        path: .test_durations

